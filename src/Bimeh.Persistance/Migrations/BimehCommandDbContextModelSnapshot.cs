// <auto-generated />
using Bimeh.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bimeh.Persistance.Migrations
{
    [DbContext(typeof(BimehCommandDbContext))]
    partial class BimehCommandDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bimeh.Domain.Coverages.Entities.Coverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("MaxCapital")
                        .HasColumnType("bigint");

                    b.Property<long>("MinCapital")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Coverages", (string)null);
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.InsuranceCalculation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,5)");

                    b.Property<long>("RequestCoverageId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Result")
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("Id");

                    b.HasIndex("RequestCoverageId")
                        .IsUnique();

                    b.ToTable("InsuranceCalculations", (string)null);
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.RequestCoverage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("CoverageId")
                        .HasColumnType("int");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestCoverages", (string)null);
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.InsuranceCalculation", b =>
                {
                    b.HasOne("Bimeh.Domain.Requests.Entities.RequestCoverage", "RequestCoverage")
                        .WithOne("InsuranceCalculation")
                        .HasForeignKey("Bimeh.Domain.Requests.Entities.InsuranceCalculation", "RequestCoverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestCoverage");
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.RequestCoverage", b =>
                {
                    b.HasOne("Bimeh.Domain.Requests.Entities.Request", "Request")
                        .WithMany("Coverages")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.Request", b =>
                {
                    b.Navigation("Coverages");
                });

            modelBuilder.Entity("Bimeh.Domain.Requests.Entities.RequestCoverage", b =>
                {
                    b.Navigation("InsuranceCalculation");
                });
#pragma warning restore 612, 618
        }
    }
}
